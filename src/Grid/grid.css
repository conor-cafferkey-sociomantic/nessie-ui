/*
 * Copyright (c) 2018 dunnhumby Germany GmbH.
 * All rights reserved.
 *
 * This source code is licensed under the MIT license found in the LICENSE file
 * in the root directory of this source tree.
 *
 */

@import "../proto/base.css";

:root
{
    --S:    8px;
    --M:    16px;
    --L:    24px;
}

.default
{
    display:                grid;
    grid-template-columns:  repeat(auto-fill, 100%);

    width:                  auto;
    max-width:              100%;

    margin-bottom:          0;
}


.alignX__left
{
    justify-items: start;
}

.alignX__center
{
    justify-items: center;
}

.alignX__right
{
    justify-items: end;
}

.alignY__top
{
    align-items:   start;
}

.alignY__middle
{
    align-items:   center;
}

.alignY__bottom
{
    align-items:   end;
}

.wrap
{
    flex-wrap: wrap;
}


.gutters__S
{
    grid-column-gap: var( --S );
}
.gutters__M
{
    grid-column-gap: var( --M );
}
.gutters__L
{
    grid-column-gap: var( --L );
}


.spacing__S
{
    grid-row-gap: var( --S );
}
.spacing__M
{
    grid-row-gap: var( --M );
}
.spacing__L
{
    grid-row-gap: var( --L );
}

/* legacy spacing options (deprecated) */
.spacing__default,
.spacing__h3,
.spacing__h4
{
    & > *
    {
        padding-top:    calc( 16px / 2 );
        padding-bottom: calc( 16px / 2 );

        margin-top:     calc( -1 * ( 16px / 2 ) );
        margin-bottom:  calc( 16px / 2 );
    }

    &:last-child
    {
        margin-bottom:  calc( -16px );
    }
}
.spacing__label
{
    & > *
    {
        padding-top:    calc( 8px / 2 );
        padding-bottom: calc( 8px / 2 );

        margin-top:     calc( -1 * ( 8px / 2 ) );
        margin-bottom:  calc( 8px / 2 );
    }

    &:last-child
    {
        margin-bottom:  calc( -8px );
    }
}
.spacing__h1
{
    & > *
    {
        padding-top:    calc( 56px / 2 );
        padding-bottom: calc( 56px / 2 );

        margin-top:     calc( -1 * ( 56px / 2 ) );
        margin-bottom:  calc( 56px / 2 );
    }

    &:last-child
    {
        margin-bottom:  calc( -56px );
    }
}
.spacing__h2
{
    & > *
    {
        padding-top:    calc( 40px / 2 );
        padding-bottom: calc( 40px / 2 );

        margin-top:     calc( -1 * ( 40px / 2 ) );
        margin-bottom:  calc( 40px / 2 );
    }

    &:last-child
    {
        margin-bottom:  calc( -40px );
    }
}


.wrap
{
    flex-wrap:  wrap;
}

.hasMinHeight
{
    min-height: 87px; /* label + input */
}
