/*
 * Copyright (c) 2017-2018 dunnhumby Germany GmbH.
 * All rights reserved.
 *
 * This source code is licensed under the MIT license found in the LICENSE file
 * in the root directory of this source tree.
 *
 */

@import "../proto/definitions/variables.css";
@import "../proto/definitions/_fonts.css";


:root
{
    --tooltipBorderRadius:  4px;
    --tooltipBorderWidth:   1px;
    --tooltipBoxShadow:     0 2px 8px  color( var( --PC-GREY ) a( 50% ) );
    --tooltipMaxWidth:      360px;
    --tooltipOffset:        var( --spacing-2 );
    --tooltipPadding:       var( --spacing-2 );

    --messageLineHeight:    var( --line-height-m );

    --caretSize:            10px;
    --carretOffset: /* center the caret to the first line of message text */
        calc( var( --tooltipPadding ) + ( var( --messageLineHeight ) / 2 ) );
}




.default
{
    visibility:     visible;
    position:       relative;
    display:        inline-block;

    box-sizing:     border-box;
    min-width:      var( --tooltipMinSize );
    min-height:     var( --tooltipMinSize);
    max-width:      var( --tooltipMaxWidth );

    border:         var( --tooltipBorderWidth ) solid;
    border-radius:  var( --tooltipBorderRadius );
    box-shadow:     var( --tooltipBoxShadow );

    padding:        var( --spacing-2 );

    text-align:     left;

    &::before /* hover area */
    {
        content:    "";
        position:   absolute;
        display:    block;
    }

    &::after /* caret */
    {
        content:                "";
        display:                block;
        position:               absolute;

        box-sizing:             inherit;
        width:                  var( --caretSize );
        height:                 var( --caretSize );

        border:                 inherit;
        border-top-color:       transparent;
        border-left-color:      transparent;

        background:             inherit;
    }


    .message
    {
        min-height:     var( --messageLineHeight );
        min-width:      var( --messageLineHeight );

        line-height:    var( --messageLineHeight );

        @extend %Nessie-SemiBold;
        color:          var( --PC-WHITE );
        overflow-wrap:  break-word;
        text-transform: none;

        a:any-link
        {
            color:              inherit !important;
            text-decoration:    underline;
        }
    }

    .close
    {
        position:   absolute;
        top:        var( --spacing-2 );
        right:      var( --spacing-2 );
    }
}


.dismissible
{
    padding-right:  var( --spacing-6 );
}


.position__top,
.position__topLeft,
.position__topRight,
.position__bottom,
.position__bottomLeft,
.position__bottomRight
{
    &::before
    {
        left:   0;
        right:  0;
        height: var( --tooltipOffset );
    }
}

.position__top,
.position__topLeft,
.position__topRight
{
    &::before,
    &::after
    {
        top:    calc( 100% + var( --tooltipBorderWidth ) );
    }

    &::after
    {
        transform:  translateX( -50% ) translateY( -50% ) rotate( 45deg );
    }
}

.position__bottom,
.position__bottomLeft,
.position__bottomRight
{
    &::before,
    &::after
    {
        bottom: calc( 100% + var( --tooltipBorderWidth ) );
    }

    &::after
    {
        transform:  translateX( -50% ) translateY( 50% ) rotate( 225deg );
    }
}

.position__top,
.position__bottom
{
    &::after
    {
        left:   50%;
    }
}

.position__topLeft,
.position__bottomLeft
{
    &::after
    {
        left:  calc( 100% - var( --carretOffset ) );
    }
}

.position__topRight,
.position__bottomRight
{
    &::after
    {
        left:   var( --carretOffset );
    }
}


.position__left,
.position__leftTop,
.position__leftBottom,
.position__right
.position__rightTop,
.position__rightBottom
{
    &::before
    {
        top:    0;
        bottom: 0;
        width:  var( --tooltipOffset );
    }
}

.position__left,
.position__leftTop,
.position__leftBottom
{
    &::before,
    &::after
    {
        left:   calc( 100% + var( --tooltipBorderWidth ) );
    }
}

.position__right,
.position__rightTop,
.position__rightBottom
{
    &::before,
    &::after
    {
        right:  calc( 100% + var( --tooltipBorderWidth ) );
    }
}

.position__left,
.position__right
{
    &::after
    {
        top:   50%;
    }
}

.position__left,
.position__leftTop,
.position__leftBottom
{
    &::after
    {
        left:       100%;
        transform:  translateX( -50% ) translateY( -50% ) rotate( 320deg );
    }
}

.position__right,
.position__rightTop,
.position__rightBottom
{
    &::after
    {
        right:      100%;
        transform:  translateX( 50% ) translateY( -50% ) rotate( 135deg );
    }
}

.position__leftTop,
.position__rightTop
{
    &::after
    {
        top:    calc( 100% - var( --carretOffset ) );
    }
}

.position__leftBottom,
.position__rightBottom
{
    &::after
    {
        top:    var( --carretOffset );
    }
}


.role__default
{
    background:     var( --PC-GREY--D45 );
    border-color:   var( --PC-GREY--D75 );
}

.role__critical
{
    background:     var( --PC-RED );
    border-color:   var( --PC-RED--D15 );
}

.role__promoted
{
    background:     var( --PC-GREEN );
    border-color:   var( --PC-GREEN--D15 );
}

.role__warning
{
    background:     var( --PC-ORANGE );
    border-color:   var( --PC-ORANGE--D15 );
}
