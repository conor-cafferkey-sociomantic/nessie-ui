@import "../proto/definitions/variables.css";
@import "../proto/definitions/_fonts.css";


:root
{
    --tooltipBorderRadius:      4px;

    --tooltipMaxWidth:          350px;

    --tooltipMaxHeight:         44px;

    --tooltipOffset:            var( --spacing-1 );

    --boxShadow:                0 2px 8px  color( var( --PC-GREY ) a( 50% ) );

    --caretSize:                14px;

    --caretPosOffset:                22px;

    --caretPosOffsetHalf:            calc( 22px / 2 );

    --caretPosOuter:            calc( ( var( --caretSize ) / -2 ) - 1px );

    --tooltipContainerPosY:     calc( 100% + var( --caretSize ) );

    --tooltipContainerPosLeft:  calc( ( var( --tooltipMaxWidth ) - var( --caretPosOffset ) - var( --caretPosOffsetHalf ) ) * -1 );

    --tooltipContainerPosRight: calc( var( --tooltipMaxWidth ) - var( --caretPosOffset ) - var( --caretPosOffsetHalf ) );

    --tooltipContainerPosTop:  calc( ( var( --tooltipMaxHeight ) - var( --caretPosOffset ) + var( --caretPosOffsetHalf ) ) * -1 );

    --tooltipContainerPosBottom: calc( var( --tooltipMaxHeight ) - var( --caretPosOffset ) + var( --caretPosOffsetHalf ) );
}


.default
{
    position:   relative;
    display:    inline-block;
    max-width:  100%;

    .content
    {
        display:        flex;
        flex-direction: column;
    }

    .tooltipContainer
    {
        visibility: hidden;
        position:   absolute;
        width: var( --tooltipMaxWidth );
        z-index: 99999;
    }

    .tooltip
    {
        visibility:     visible;
        position:       relative;
        text-align:     left;
        box-sizing:     border-box;
        display:        inline-block;
        min-width:      calc( var( --caretPosOffset ) * 2 );
        min-height:     calc( var( --caretPosOffset ) * 2 );
        border-radius:  var( --tooltipBorderRadius );
        border:         1px solid var( --PC-GREY--D75 );
        box-shadow:     var( --boxShadow );
        padding:        var( --spacing-1 ) var( --spacing-2 );

        background:     var( --PC-GREY--D45 );

        &::before,
        &::after
        {
            content:    "";
            position:   absolute;
        }
        &::after
        {
          position: absolute;
          width: var( --caretSize );
          height: var( --caretSize );
          background: inherit;
          border: inherit;
          border-bottom-color: transparent;
          border-right-color: transparent;

        }
    }

    .message
    {
        @extend %Nessie-SemiBold;
        color:          var( --PC-WHITE );
        overflow-wrap:  break-word;

        a:any-link
        {
            color:              inherit !important;
            text-decoration:    underline;
        }
    }

    .close
    {
        position:   absolute;
        top:        var( --spacing-1 );
        right:      var( --spacing-2 );
    }
}


.dismissible
{
    .tooltip
    {
        padding-right:  var( --spacing-6 );
    }
}

.position__top,
.position__bottom,
.position__topLeft,
.position__topRight,
.position__bottomLeft,
.position__bottomRight,

.position__left,
.position__right,
.position__leftTop,
.position__leftBottom,
.position__rightTop,
.position__rightBottom
{
    .tooltip
    {
      &::before
      {
        left:   0;
        right:  0;
        height: var( --tooltipOffset );
      }
    }
}


.position__top,
.position__topLeft,
.position__topRight
{
    .tooltipContainer
    {
        bottom:    var( --tooltipContainerPosY );
        left: 50%;
    }

    .tooltip
    {

        &::before
        {
            top:    100%;
        }
        &::after
        {
            bottom: var( --caretPosOuter );
        }
    }
}

.position__bottom,
.position__bottomLeft,
.position__bottomRight
{
    .tooltipContainer
    {
        top: var( --tooltipContainerPosY );
        left: 50%;
    }
    .tooltip
    {
        top:    0;

        &::before
        {
            bottom: 100%;
        }
        &::after
        {
          top: var( --caretPosOuter );
        }
    }
}


.position__top,
.position__bottom
{
    .tooltipContainer
    {
        transform: translateX( -50% );
        text-align: center;
    }

    .tooltip::after
    {
      left: 50%;
    }
    &Left
    {
        .tooltipContainer
        {
            transform: translateX( var( --tooltipContainerPosLeft ) );
            text-align: right;
        }
        .tooltip::after
        {
            right: var( --caretPosOffset );
        }
    }

    &Right
    {
        .tooltipContainer
        {
            transform: translateX( var( --tooltipContainerPosRight ) );
            text-align: left;
            right: 50%;
            left: auto;
        }
        .tooltip::after
        {
            left: var( --caretPosOffset );
        }
    }
}

.position__top
{
    .tooltip::after
    {
        transform: translateX( -50% ) rotate( 225deg );
    }
    &Left,
    &Right
    {
        .tooltip::after
        {
            transform: translateX( 0 ) rotate( 225deg );
        }
    }
}

.position__bottom
{
    .tooltip::after
    {
      transform: translateX( -50% ) rotate( 45deg );
    }
    &Left,
    &Right
    {
        .tooltip::after
        {
            transform: translateX( 0 ) rotate( 45deg );
        }
    }
}

.position__left,
.position__leftTop,
.position__leftBottom
{
    .tooltipContainer
    {
        text-align: right;
        right:    var( --tooltipContainerPosY );
        top: 50%;
    }

    .tooltip::after
    {
        right:  var( --caretPosOuter );
    }
}


.position__right,
.position__rightTop,
.position__rightBottom
{
    .tooltipContainer
    {
        text-align: left;
        left: var( --tooltipContainerPosY );
        top: 50%;
    }

    .tooltip::after
    {
        left:  var( --caretPosOuter );
    }
}
.position__left,
.position__right
{
    .tooltipContainer
    {
        transform: translateY( -50% );
    }

    .tooltip
    {
        &::before
        {
            top:    0;
            bottom: 0;
            width:  var( --tooltipOffset );
        }
        &::after
        {
          top:    50%;
        }
    }
    &Top
    {
        .tooltipContainer
        {
            transform: translateY( var( --tooltipContainerPosTop ) );
        }
        .tooltip::after
        {
            top: var( --caretPosOffset );
        }
    }
    &Bottom
    {
        .tooltipContainer
        {
            transform: translateY( var( --tooltipContainerPosBottom ) );
            bottom: 50%;
            top: auto;
        }
        .tooltip::after
        {
            bottom: var( --caretPosOffset );
        }
    }
}

.position__left
{
    .tooltip
    {
        &::after
        {
            transform: translateY( -50% ) rotate( -225deg );
        }
    }
    &Top,
    &Bottom
    {
        .tooltip::after
        {
            transform: translateY( 0 ) rotate( -225deg );
        }
    }
}

.position__right
{
    .tooltip::after
    {
      transform: translateY( -50% ) rotate( -45deg );
    }
    &Top,
    &Bottom
    {
        .tooltip::after
        {
            transform: translateY( 0 ) rotate( -45deg );
        }
    }
}


.role__critical
{
    .tooltip
    {
      background: var( --PC-RED );
      border-color: var( --PC-RED );
    }
}

.role__promoted
{
    .tooltip
    {
      background: var( --PC-GREEN );
      border-color: var( --PC-GREEN );
    }
}

.role__warning
{
    .tooltip
    {
      background: var( --PC-ORANGE );
      border-color: var( --PC-ORANGE );
    }

}
